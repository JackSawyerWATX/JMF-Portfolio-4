"use client"

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: MOJackal (https://sketchfab.com/MOJackal)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/satellite-51b687b2effb4bd9a1176a8d45b7157d
Title: Satellite
*/

import React, { useRef } from 'react'
import { PerspectiveCamera, useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Satellite(props) {
    const { nodes, materials } = useGLTF('/models/satellite2-transformed.glb')

    const modelRef = useRef()
    const cameraRef = useRef()

    useFrame((state, delta, xrFrame) => {
        // This function controls satellite movement
    // OPTION 1
        modelRef.current.position.y = -0.1 / 2 + Math.sin(state.clock.elapsedTime) * 0.1 / 120;
        modelRef.current.position.x = -0.4 / 2 + Math.cos(state.clock.elapsedTime) * 0.1 / 200;
    // OPTION 2
//        modelRef.current.position.y = -0.1 + Math.sin(state.clock.elapsedTime) * 0.09 / 129;
//        modelRef.current.position.x = -0.4 + Math.cos(state.clock.elapsedTime) * 0.09 / 19;
        // modelRef.current.position.z = -7; // Push the satellite further back in the Z-axis

        // Make the background zoom faster by adjusting camera FOV
        if (cameraRef.current) {
            // Increase FOV to zoom in faster
            cameraRef.current.fov = 105 + Math.sin(state.clock.elapsedTime) * 1.1;
            cameraRef.current.updateProjectionMatrix();
        }
    })

    return (
        <>
        <PerspectiveCamera
        ref={cameraRef}
        makeDefault
        position={[0, 0, 0]} // Set an initial camera position
        fov={750}  // Initial field of view
    />
        <group {...props} dispose={null}    // Makes adjustments to the satellite position
            ref={modelRef}
            position={[-14, -14, -7]}
            scale={[0.34, 0.34, 0.34]}
            rotation={[0.10, -0.30, -0.12]}>
            <mesh
                name="Object_2"
                castShadow
                receiveShadow
                geometry={nodes.Object_2.geometry}
                material={materials.PaletteMaterial001}
                rotation={[-Math.PI / 2, 0, 0]}
            />
        </group>
        </>
    )
}

useGLTF.preload('/models/satellite2-transformed.glb')

